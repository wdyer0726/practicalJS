// v11- Destroy all for loops
  //todoList.toggleAll should use forEach
  //view.displayTodos should use forEach

var todoList = {
  todos: [],
  addTodo: function(todoText) {
    this.todos.push({
      todoText: todoText,
      completed: false
    });
  },
  changeTodo: function(position, todoText) {
    this.todos[position].todoText = todoText;
  },
  deleteTodo: function(position) {
    this.todos.splice(position, 1);
  },
  toggleCompleted: function(position) {
    var todo = this.todos[position];
    todo.completed = !todo.completed;
  },
  toggleAll: function() {
    var totalTodos = this.todos.length;
    var completedTodos = 0;
    
    // Get number of completed todos.
    //for (var i = 0; i < totalTodos; i++) {
      //if (this.todos[i].completed === true) {
        //completedTodos++;
      //}
    //}
    this.todos.forEach(function(todo) {
      if (todo.completed === true) {
        completedTodos++;
      }
    }); 
    
    // Case 1: If everythingâ€™s true, make everything false.
    //if (completedTodos === totalTodos) {
      //for (var i = 0; i < totalTodos; i++) {
        //this.todos[i].completed = false;
      //}
      //this.todos.forEach(function(todo) {
      //  todo.completed = false;
     // })
    // Case 2: Otherwise, make everything true.
    //} else {
      //for (var i = 0; i < totalTodos; i++) {
        //this.todos[i].completed = true;
      //}
      //this.todos.forEach(function () {
      //  todo.completed = true;
      //})
    //} ^-- this, becomes this ---v
    this.todos.forEach(function(todo) {
      //Case1: if everythings true, make everything false
      if (completedTodos === totalTodos) {
        todo.completed = false;
      } else {
      //Case2: other wise make everything true
        todo.completed = true;
      }
    });
  }
};

var handlers = {
  addTodo: function() {
    var addTodoTextInput = document.getElementById('addTodoTextInput');
    todoList.addTodo(addTodoTextInput.value);
    addTodoTextInput.value = '';
    view.displayTodos();
  },
  changeTodo: function() {
    var changeTodoPositionInput = document.getElementById('changeTodoPositionInput');
    var changeTodoTextInput = document.getElementById('changeTodoTextInput');
    todoList.changeTodo(changeTodoPositionInput.valueAsNumber, changeTodoTextInput.value);
    changeTodoPositionInput.value = '';
    changeTodoTextInput.value = '';
    view.displayTodos();
  },
  deleteTodo: function(position) {
    todoList.deleteTodo(position);
    view.displayTodos();
  },
  toggleCompleted: function() {
    var toggleCompletedPositionInput = document.getElementById('toggleCompletedPositionInput');
    todoList.toggleCompleted(toggleCompletedPositionInput.valueAsNumber);
    toggleCompletedPositionInput.value = '';
    view.displayTodos();
  },
  toggleAll: function() {
    todoList.toggleAll();
    view.displayTodos();
  }  
};

var view = {
  displayTodos: function() {
    var todosUl = document.querySelector('ul');
    todosUl.innerHTML = '';
    
    //this // refers to the view object
    // forEach(callback, this) to 
    
    todoList.todos.forEach(function(todo, position)  {
      var todoLi = document.createElement('li');
      var todoTextWithCompletion = '';

      if (todo.completed === true) {
        todoTextWithCompletion = '(x) ' + todo.todoText;
      } else {
        todoTextWithCompletion = '( ) ' + todo.todoText;
      }
      
      todoLi.id = position;
      todoLi.textContent = todoTextWithCompletion;
      todoLi.appendChild(this.createDeleteButton());
      todosUl.appendChild(todoLi);
    }, this);

  },
  createDeleteButton: function() {
    var deleteButton = document.createElement('button');
    deleteButton.textContent = 'Delete';
    // define a class name, basically a way to identify non-unique delete buttons (aka more than one element)
    deleteButton.className = 'deleteButton'
    return deleteButton;
  },
  setUpEventListeners: function () {
    var todosUl = document.querySelector('ul');
    
    todosUl.addEventListener('click', function (event) {
      var elementClicked = event.target;
      if (elementClicked.className === 'deleteButton') {
        handlers.deleteTodo(parseInt(elementClicked.parentNode.id));
      }
    });
  }
};

view.setUpEventListeners();

















